{"version":3,"file":"navigate.js","sourceRoot":"lib/","sources":["__builtins__/shared/navigate.ts"],"names":[],"mappings":";;;AAAA;;;;GAIG;AACH,SAAgB,UAAU,CAAC,GAAW,EAAE,OAAe;IAAf,wBAAA,EAAA,eAAe;IACrD,IAAI;QACF,MAAM,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC;KACtD;IAAC,OAAO,CAAC,EAAE;QACV,MAAM,CAAC,QAAQ,CAAC,IAAI,GAAG,GAAG,CAAC;KAC5B;AACH,CAAC;AAND,gCAMC;AAED,YAAY;AACZ,SAAgB,aAAa,CAAC,GAAW;IACvC,OAAO,gCAAgC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AACpD,CAAC;AAFD,sCAEC;AAED;;;;GAIG;AACH,SAAgB,UAAU,CACxB,GAAW,EACX,EAAqH;QAArH,qBAAmH,EAAE,KAAA,EAAnH,eAAe,EAAf,OAAO,mBAAG,KAAK,KAAA,EAAE,MAAM,YAAA;IAEzB,IAAI,CAAC,GAAG,EAAE;QACR,MAAM,IAAI,KAAK,CAAC,aAAa,CAAC,CAAC;KAChC;IAED,IAAM,WAAW,GAAG,OAAO,GAAG,KAAK,QAAQ,CAAC;IAC5C,IAAI,WAAW,EAAE;QACf,8BAA8B;QAC9B,IAAI,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE;YACtB,OAAO;SACR;QACD,IAAI,GAAG,KAAK,MAAM,EAAE;YAClB,MAAM,aAAN,MAAM,uBAAN,MAAM,CAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;YACf,OAAO;SACR;QACD,IAAI,aAAa,CAAC,GAAG,CAAC,EAAE;YACtB,OAAO,UAAU,CAAC,GAAG,EAAE,OAAO,CAAC,CAAC;SACjC;KACF;IAED,MAAM,aAAN,MAAM,uBAAN,MAAM,CAAG,OAAO,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC;AAC9C,CAAC;AAxBD,gCAwBC","sourcesContent":["/**\n * 绝对URL跳转\n * @param {string} url 目标URL\n * @param {boolean} replace 是否使用replace方式跳转\n */\nexport function absoluteGo(url: string, replace = false) {\n  try {\n    window.location[replace ? 'replace' : 'assign'](url);\n  } catch (e) {\n    window.location.href = url;\n  }\n}\n\n// 判断是否是绝对路径\nexport function isAbsoluteUrl(url: string) {\n  return /^(https?:\\/\\/|\\/\\/)[\\w.]+\\/?/gi.test(url);\n}\n\n/**\n * URL跳转\n * @param {Rawlocation} url 目标URL\n * @param {boolean} replace 是否使用replace方式跳转\n */\nexport function navigateTo(\n  url: string,\n  { replace = false, router }: { replace?: boolean; router?: { go: Function; push: Function; replace: Function } } = {},\n) {\n  if (!url) {\n    throw new Error('invalid url');\n  }\n\n  const isStringUrl = typeof url === 'string';\n  if (isStringUrl) {\n    // prevent goTo('javascript?')\n    if (/^javas/.test(url)) {\n      return;\n    }\n    if (url === 'BACK') {\n      router?.go(-1);\n      return;\n    }\n    if (isAbsoluteUrl(url)) {\n      return absoluteGo(url, replace);\n    }\n  }\n\n  router?.[replace ? 'replace' : 'push'](url);\n}\n"]}